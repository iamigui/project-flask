name: Build Flask Image
on:
  pull_request:
    types:
      - closed

env: 
  VERSION: v1

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    name: Check PR
    runs-on: ubuntu-latest
    steps:
      - name: Prod env
        run: echo "Se ha realizado una PR"

  env-configuration:
    name: Check Variable env-configuration
    needs: if_merged
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Variable
        id: get-variable
        run: |
          file_content=$(cat configs/build-configuration)
          echo "build_configuration=$file_content" >> $GITHUB_OUTPUT

    outputs:
      build_configuration: ${{ steps.get-variable.outputs.build_configuration }}

  build:
    name: Build & Push ECR
    runs-on: ubuntu-latest
    needs: env-configuration
    if: ${{ needs.env-configuration.outputs.build_configuration == 'build' }}
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.IMAGE }}

      - name: Tag Docker Image
        run: docker tag ${{ secrets.IMAGE }}:latest ${{ secrets.REPO }}/${{ secrets.IMAGE }}:$VERSION

      - name: AWS Config
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Get ECR Pass
        run: aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.REPO }}

      - name: Push
        run: docker push ${{ secrets.REPO }}/${{ secrets.IMAGE }}:$VERSION
        
